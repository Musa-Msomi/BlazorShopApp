@page "/product/{id:int}"
@using BlazorShopApp.Client.Services.ProductService
@using BlazorShopApp.Shared

@inject IProductService ProductService

@if (product is null)
{
    <span>@message</span>
}
else
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@product.Title</h2>
            <p>@product.Description</p>
            @*<h4 class="price">$@product.Price</h4>*@
        </div>
    </div>
}


@code {
    private Product? product = null;
    private string message = string.Empty;
    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "fetching product";

        var result = await ProductService.GetProduct(Id);

        if (!result.Success)
        {
            message = "Oops, that product is currently unavailable";
        }
        else
        {
            product = result.Data;
        }
    }
}
